---
- name: Provisioning servers
  hosts: all
  become: yes
  vars:
    mydir: /opt/dir2
  tasks:
    - name: Install ntp agent on centos 
      yum:
        name: "{{item}}" # item will be the things in loop
        state: present
      when: ansible_distribution == "CentOS"
      loop:
        - chrony
        - wget
        - git
        - zip
        - unzip
    
    - name: Install ntp agent on ubuntu 
      apt: 
       name: "{{item}}"
       state: present
       update_cache: yes
      when: ansible_distribution == "Ubuntu"
      loop:
        - chrony
        - wget
        - git
        - zip
        - unzip
      
    - name: Start service on centos
      service:
        name: chronyd
        state: started
        enabled: yes 
      when: ansible_distribution == "CentOS"

    - name: Start service on ubuntu
      service:
        name: chronyd
        state: started
        enabled: yes 
      when: ansible_distribution == "Ubuntu"

    - name: Banner file
      copy:
        content: '# This server is managed by ansible. No manual changes please.'
        dest: /etc/motd

    - name: Create a folder
      file: 
        path: "{{mydir}}"
        state: directory 

    - name: Deploy ntp agent conf on centos
      template:
        src: templates/ntpconf_centos
        dest: /etc/chrony.conf
        backup: yes 
      when: ansible_distribution == "CentOS"
      notify: 
        - reStart service on centos

    - name: Deploy ntp agent conf on ubuntu
      template:
        src: templates/ntpconf_ubuntu
        dest: /etc/ntp.conf
        backup: yes 
      when: ansible_distribution == "Ubuntu"
      notify: 
        - reStart service on ubuntu

    - name: Dump file 
      copy: 
        src: files/myfile.txt
        dest: /tmp/myfile.txt

  handlers:
    - name: reStart service on centos
      service:
        name: chronyd
        state: restarted
        enabled: yes 
      when: ansible_distribution == "CentOS"

    - name: reStart service on ubuntu
      service:
        name: chronyd
        state: restarted
        enabled: yes 
      when: ansible_distribution == "Ubuntu"
